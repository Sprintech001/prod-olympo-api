// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using olympo_webapi.Infrastructure;

#nullable disable

namespace olympo_webapi.Migrations
{
    [DbContext(typeof(ConnectionContext))]
    [Migration("20250329023603_InitialDb")]
    partial class InitialDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("olympo_webapi.Models.Exercise", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId1")
                        .HasColumnType("integer");

                    b.Property<string>("VideoPath")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.HasIndex("UserId1");

                    b.ToTable("Exercises");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Descrição do exercício",
                            ImagePath = "images/exe2.png",
                            Name = "Agachamento Terra",
                            UserId = 3,
                            VideoPath = "videos/execucao.mp4"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Descrição do exercício",
                            ImagePath = "images/exe.png",
                            Name = "Rosca Concentrada",
                            UserId = 4,
                            VideoPath = "videos/execucao.mp4"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Descrição do exercício",
                            ImagePath = "images/exe3.png",
                            Name = "Supino Reto",
                            UserId = 3,
                            VideoPath = "videos/execucao.mp4"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Descrição do exercício",
                            ImagePath = "images/exe4.png",
                            Name = "Puxada Aberta",
                            UserId = 3,
                            VideoPath = "videos/execucao.mp4"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Descrição do exercício",
                            ImagePath = "images/exe5.png",
                            Name = "Levantamento Terra",
                            UserId = 4,
                            VideoPath = "videos/execucao.mp4"
                        });
                });

            modelBuilder.Entity("olympo_webapi.Models.ExerciseDay", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<int>("SessionId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("ExerciseDays");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DayOfWeek = "Segunda",
                            ExerciseId = 1,
                            SessionId = 1,
                            UserId = 3
                        },
                        new
                        {
                            Id = 2,
                            DayOfWeek = "Terça",
                            ExerciseId = 2,
                            SessionId = 2,
                            UserId = 4
                        },
                        new
                        {
                            Id = 3,
                            DayOfWeek = "Quarta",
                            ExerciseId = 3,
                            SessionId = 3,
                            UserId = 3
                        },
                        new
                        {
                            Id = 4,
                            DayOfWeek = "Domingo",
                            ExerciseId = 4,
                            SessionId = 4,
                            UserId = 3
                        },
                        new
                        {
                            Id = 5,
                            DayOfWeek = "Segunda",
                            ExerciseId = 5,
                            SessionId = 5,
                            UserId = 4
                        });
                });

            modelBuilder.Entity("olympo_webapi.Models.Session", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<double>("Breaks")
                        .HasColumnType("double precision");

                    b.Property<int>("ExerciseId")
                        .HasColumnType("integer");

                    b.Property<int>("Repetitions")
                        .HasColumnType("integer");

                    b.Property<int>("Series")
                        .HasColumnType("integer");

                    b.Property<double>("Time")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Sessions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Breaks = 60.0,
                            ExerciseId = 1,
                            Repetitions = 10,
                            Series = 3,
                            Time = 5.0
                        },
                        new
                        {
                            Id = 2,
                            Breaks = 45.0,
                            ExerciseId = 2,
                            Repetitions = 12,
                            Series = 4,
                            Time = 6.0
                        },
                        new
                        {
                            Id = 3,
                            Breaks = 90.0,
                            ExerciseId = 3,
                            Repetitions = 8,
                            Series = 5,
                            Time = 7.5
                        },
                        new
                        {
                            Id = 4,
                            Breaks = 30.0,
                            ExerciseId = 4,
                            Repetitions = 15,
                            Series = 3,
                            Time = 4.5
                        },
                        new
                        {
                            Id = 5,
                            Breaks = 120.0,
                            ExerciseId = 5,
                            Repetitions = 6,
                            Series = 6,
                            Time = 10.0
                        });
                });

            modelBuilder.Entity("olympo_webapi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("CPF")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CPF = "123.456.789-01",
                            Email = "adm@gmail.com",
                            ImagePath = "defaultphoto.jpg",
                            Name = "Admin",
                            Password = "AQAAAAIAAYagAAAAEMlYThVyOa5W1NWU3FdZAMXdSQycEU5cpvd3j0sQwZzawuv0C8dDj5jRG+7IrH/mWQ==",
                            Type = "Administrador"
                        },
                        new
                        {
                            Id = 2,
                            CPF = "987.654.321-09",
                            Email = "jose@gmail.com",
                            ImagePath = "defaultphoto.jpg",
                            Name = "José",
                            Password = "AQAAAAIAAYagAAAAECxGMqRRRInmQyfEgq6wB1xaosd+kB6qLnClfZevHFi6QEXTgl79i+1pdwaVu/Yxvw==",
                            Type = "Professor"
                        },
                        new
                        {
                            Id = 3,
                            CPF = "111.222.333-44",
                            Email = "maria@gmail.com",
                            ImagePath = "defaultphoto.jpg",
                            Name = "Maria",
                            Password = "AQAAAAIAAYagAAAAEIlCw2pIoqVlhW2QXFijk2jmOEdVy4ZI3oQjjfeXIksqcVBGkC5nFET71sy+4sWZtA==",
                            Type = "Aluno"
                        },
                        new
                        {
                            Id = 4,
                            CPF = "555.666.777-88",
                            Email = "joao@gmail.com",
                            ImagePath = "defaultphoto.jpg",
                            Name = "João",
                            Password = "AQAAAAIAAYagAAAAEOiiFlwg+6y/M6fWsYs4FtAasDgmveVNkyRdrsKwWVhGPb2dwsI2gNyqsh6jS/9ZPQ==",
                            Type = "Aluno"
                        });
                });

            modelBuilder.Entity("olympo_webapi.Models.Exercise", b =>
                {
                    b.HasOne("olympo_webapi.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("olympo_webapi.Models.User", null)
                        .WithMany("Exercises")
                        .HasForeignKey("UserId1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("olympo_webapi.Models.ExerciseDay", b =>
                {
                    b.HasOne("olympo_webapi.Models.Exercise", null)
                        .WithMany("ExerciseDays")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("olympo_webapi.Models.Session", b =>
                {
                    b.HasOne("olympo_webapi.Models.Exercise", "Exercise")
                        .WithMany("Sessions")
                        .HasForeignKey("ExerciseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Exercise");
                });

            modelBuilder.Entity("olympo_webapi.Models.Exercise", b =>
                {
                    b.Navigation("ExerciseDays");

                    b.Navigation("Sessions");
                });

            modelBuilder.Entity("olympo_webapi.Models.User", b =>
                {
                    b.Navigation("Exercises");
                });
#pragma warning restore 612, 618
        }
    }
}
